<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.1 r1853635">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/login" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;email&quot;:&quot;hello+account_admin@mightifier.com&quot;,&quot;password&quot;:&quot;pass&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/user/login</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Content-type" elementType="Header">
                <stringProp name="Header.name">Content-type</stringProp>
                <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="GraphVisualizer" testclass="ResultCollector" testname="Graph Results" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">auth_token</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.token</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/class" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;id&quot;:&quot;${classId2}&quot;, &quot;name&quot;:&quot;Class ${__threadNum}B&quot;,&quot;grade&quot;:&quot;${__threadNum}&quot;,&quot;users&quot;:[{&quot;id&quot;:&quot;${__UUID}&quot;,&quot;name&quot;:&quot;${__V(surname_${__Random(1,50,)})} ${__V(name_${__Random(1,40,)})}&quot;},{&quot;id&quot;:&quot;${__UUID}&quot;,&quot;name&quot;:&quot;${__V(surname_${__Random(1,50,)})} ${__V(name_${__Random(1,40,)})}&quot;},{&quot;id&quot;:&quot;${__UUID}&quot;,&quot;name&quot;:&quot;${__V(surname_${__Random(1,50,)})} ${__V(name_${__Random(1,40,)})}&quot;},{&quot;id&quot;:&quot;${__UUID}&quot;,&quot;name&quot;:&quot;${__V(surname_${__Random(1,50,)})} ${__V(name_${__Random(1,40,)})}&quot;},{&quot;id&quot;:&quot;${__UUID}&quot;,&quot;name&quot;:&quot;${__V(surname_${__Random(1,50,)})} ${__V(name_${__Random(1,40,)})}&quot;},{&quot;id&quot;:&quot;${__UUID}&quot;,&quot;name&quot;:&quot;${__V(surname_${__Random(1,50,)})} ${__V(name_${__Random(1,40,)})}&quot;},{&quot;id&quot;:&quot;${__UUID}&quot;,&quot;name&quot;:&quot;${__V(surname_${__Random(1,50,)})} ${__V(name_${__Random(1,40,)})}&quot;},{&quot;id&quot;:&quot;${__UUID}&quot;,&quot;name&quot;:&quot;${__V(surname_${__Random(1,50,)})} ${__V(name_${__Random(1,40,)})}&quot;},{&quot;id&quot;:&quot;${__UUID}&quot;,&quot;name&quot;:&quot;${__V(surname_${__Random(1,50,)})} ${__V(name_${__Random(1,40,)})}&quot;},{&quot;id&quot;:&quot;${__UUID}&quot;,&quot;name&quot;:&quot;${__V(surname_${__Random(1,50,)})} ${__V(name_${__Random(1,40,)})}&quot;},{&quot;id&quot;:&quot;${__UUID}&quot;,&quot;name&quot;:&quot;${__V(surname_${__Random(1,50,)})} ${__V(name_${__Random(1,40,)})}&quot;},{&quot;id&quot;:&quot;${__UUID}&quot;,&quot;name&quot;:&quot;${__V(surname_${__Random(1,50,)})} ${__V(name_${__Random(1,40,)})}&quot;},{&quot;id&quot;:&quot;${__UUID}&quot;,&quot;name&quot;:&quot;${__V(surname_${__Random(1,50,)})} ${__V(name_${__Random(1,40,)})}&quot;},{&quot;id&quot;:&quot;${__UUID}&quot;,&quot;name&quot;:&quot;${__V(surname_${__Random(1,50,)})} ${__V(name_${__Random(1,40,)})}&quot;},{&quot;id&quot;:&quot;${__UUID}&quot;,&quot;name&quot;:&quot;${__V(surname_${__Random(1,50,)})} ${__V(name_${__Random(1,40,)})}&quot;},{&quot;id&quot;:&quot;${__UUID}&quot;,&quot;name&quot;:&quot;${__V(surname_${__Random(1,50,)})} ${__V(name_${__Random(1,40,)})}&quot;},{&quot;id&quot;:&quot;${__UUID}&quot;,&quot;name&quot;:&quot;${__V(surname_${__Random(1,50,)})} ${__V(name_${__Random(1,40,)})}&quot;},{&quot;id&quot;:&quot;${__UUID}&quot;,&quot;name&quot;:&quot;${__V(surname_${__Random(1,50,)})} ${__V(name_${__Random(1,40,)})}&quot;},{&quot;id&quot;:&quot;${__UUID}&quot;,&quot;name&quot;:&quot;${__V(surname_${__Random(1,50,)})} ${__V(name_${__Random(1,40,)})}&quot;},{&quot;id&quot;:&quot;${__UUID}&quot;,&quot;name&quot;:&quot;${__V(surname_${__Random(1,50,)})} ${__V(name_${__Random(1,40,)})}&quot;}],&quot;parentId&quot;:&quot;8d008aa5-a19b-4555-bb4a-792bfc56df32&quot;,&quot;admins&quot;:[&quot;cd2df273-a40e-4e60-ab0c-408ac111b7f7&quot;],&quot;type&quot;:&quot;CLASS&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/class</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Content-type" elementType="Header">
                <stringProp name="Header.name">Content-type</stringProp>
                <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">${auth_token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename">/Users/patrykjaruga/Desktop/POST-feedback.csv</stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.ResponseTimesPercentilesGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Response Times Percentiles" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
            <longProp name="interval_grouping">500</longProp>
            <boolProp name="graph_aggregated">false</boolProp>
            <stringProp name="include_sample_labels"></stringProp>
            <stringProp name="exclude_sample_labels"></stringProp>
            <stringProp name="start_offset"></stringProp>
            <stringProp name="end_offset"></stringProp>
            <boolProp name="include_checkbox_state">false</boolProp>
            <boolProp name="exclude_checkbox_state">false</boolProp>
          </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="name_1" elementType="Argument">
                <stringProp name="Argument.name">name_1</stringProp>
                <stringProp name="Argument.value">Emma</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="name_2" elementType="Argument">
                <stringProp name="Argument.name">name_2</stringProp>
                <stringProp name="Argument.value">Olivia</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="name_3" elementType="Argument">
                <stringProp name="Argument.name">name_3</stringProp>
                <stringProp name="Argument.value">Ava</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="name_4" elementType="Argument">
                <stringProp name="Argument.name">name_4</stringProp>
                <stringProp name="Argument.value">Isabella</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="name_5" elementType="Argument">
                <stringProp name="Argument.name">name_5</stringProp>
                <stringProp name="Argument.value">Sophia</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="name_6" elementType="Argument">
                <stringProp name="Argument.name">name_6</stringProp>
                <stringProp name="Argument.value">Mia</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="name_7" elementType="Argument">
                <stringProp name="Argument.name">name_7</stringProp>
                <stringProp name="Argument.value">Amelia</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="name_8" elementType="Argument">
                <stringProp name="Argument.name">name_8</stringProp>
                <stringProp name="Argument.value">Charlotte</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="name_9" elementType="Argument">
                <stringProp name="Argument.name">name_9</stringProp>
                <stringProp name="Argument.value">Evelyn</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="name_10" elementType="Argument">
                <stringProp name="Argument.name">name_10</stringProp>
                <stringProp name="Argument.value">Emily</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="name_11" elementType="Argument">
                <stringProp name="Argument.name">name_11</stringProp>
                <stringProp name="Argument.value">Madison</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="name_12" elementType="Argument">
                <stringProp name="Argument.name">name_12</stringProp>
                <stringProp name="Argument.value">Scarlett</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="name_13" elementType="Argument">
                <stringProp name="Argument.name">name_13</stringProp>
                <stringProp name="Argument.value">Victoria</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="name_14" elementType="Argument">
                <stringProp name="Argument.name">name_14</stringProp>
                <stringProp name="Argument.value">Aria</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="name_15" elementType="Argument">
                <stringProp name="Argument.name">name_15</stringProp>
                <stringProp name="Argument.value">Chloe</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="name_16" elementType="Argument">
                <stringProp name="Argument.name">name_16</stringProp>
                <stringProp name="Argument.value">Camila</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="name_17" elementType="Argument">
                <stringProp name="Argument.name">name_17</stringProp>
                <stringProp name="Argument.value">Nora</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="name_18" elementType="Argument">
                <stringProp name="Argument.name">name_18</stringProp>
                <stringProp name="Argument.value">Zoey</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="name_19" elementType="Argument">
                <stringProp name="Argument.name">name_19</stringProp>
                <stringProp name="Argument.value">Natalie</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="name_20" elementType="Argument">
                <stringProp name="Argument.name">name_20</stringProp>
                <stringProp name="Argument.value">Stella</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="name_21" elementType="Argument">
                <stringProp name="Argument.name">name_21</stringProp>
                <stringProp name="Argument.value">Liam</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="name_22" elementType="Argument">
                <stringProp name="Argument.name">name_22</stringProp>
                <stringProp name="Argument.value">Noah</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="name_23" elementType="Argument">
                <stringProp name="Argument.name">name_23</stringProp>
                <stringProp name="Argument.value">William</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="name_24" elementType="Argument">
                <stringProp name="Argument.name">name_24</stringProp>
                <stringProp name="Argument.value">James</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="name_25" elementType="Argument">
                <stringProp name="Argument.name">name_25</stringProp>
                <stringProp name="Argument.value">Logan</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="name_26" elementType="Argument">
                <stringProp name="Argument.name">name_26</stringProp>
                <stringProp name="Argument.value">Benjamin</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="name_27" elementType="Argument">
                <stringProp name="Argument.name">name_27</stringProp>
                <stringProp name="Argument.value">Mason</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="name_28" elementType="Argument">
                <stringProp name="Argument.name">name_28</stringProp>
                <stringProp name="Argument.value">Elijah</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="name_29" elementType="Argument">
                <stringProp name="Argument.name">name_29</stringProp>
                <stringProp name="Argument.value">Olivier</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="name_30" elementType="Argument">
                <stringProp name="Argument.name">name_30</stringProp>
                <stringProp name="Argument.value">Jacob</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="name_31" elementType="Argument">
                <stringProp name="Argument.name">name_31</stringProp>
                <stringProp name="Argument.value">Lucas</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="name_32" elementType="Argument">
                <stringProp name="Argument.name">name_32</stringProp>
                <stringProp name="Argument.value">Michael</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="name_33" elementType="Argument">
                <stringProp name="Argument.name">name_33</stringProp>
                <stringProp name="Argument.value">Alexander</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="name_34" elementType="Argument">
                <stringProp name="Argument.name">name_34</stringProp>
                <stringProp name="Argument.value">Ethan</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="name_35" elementType="Argument">
                <stringProp name="Argument.name">name_35</stringProp>
                <stringProp name="Argument.value">Daniel</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="name_36" elementType="Argument">
                <stringProp name="Argument.name">name_36</stringProp>
                <stringProp name="Argument.value">David</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="name_37" elementType="Argument">
                <stringProp name="Argument.name">name_37</stringProp>
                <stringProp name="Argument.value">Samuel</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="name_38" elementType="Argument">
                <stringProp name="Argument.name">name_38</stringProp>
                <stringProp name="Argument.value">Carter</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="name_39" elementType="Argument">
                <stringProp name="Argument.name">name_39</stringProp>
                <stringProp name="Argument.value">John</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="name_40" elementType="Argument">
                <stringProp name="Argument.name">name_40</stringProp>
                <stringProp name="Argument.value">Owen</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="surname_1" elementType="Argument">
                <stringProp name="Argument.name">surname_1</stringProp>
                <stringProp name="Argument.value">Smith</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="surname_2" elementType="Argument">
                <stringProp name="Argument.name">surname_2</stringProp>
                <stringProp name="Argument.value">Johnson</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="surname_3" elementType="Argument">
                <stringProp name="Argument.name">surname_3</stringProp>
                <stringProp name="Argument.value">Williams</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="surname_4" elementType="Argument">
                <stringProp name="Argument.name">surname_4</stringProp>
                <stringProp name="Argument.value">Jones</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="surname_5" elementType="Argument">
                <stringProp name="Argument.name">surname_5</stringProp>
                <stringProp name="Argument.value">Brown</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="surname_6" elementType="Argument">
                <stringProp name="Argument.name">surname_6</stringProp>
                <stringProp name="Argument.value">Davis</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="surname_7" elementType="Argument">
                <stringProp name="Argument.name">surname_7</stringProp>
                <stringProp name="Argument.value">Miler</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="surname_8" elementType="Argument">
                <stringProp name="Argument.name">surname_8</stringProp>
                <stringProp name="Argument.value">Taylor</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="surname_9" elementType="Argument">
                <stringProp name="Argument.name">surname_9</stringProp>
                <stringProp name="Argument.value">Moore</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="surname_10" elementType="Argument">
                <stringProp name="Argument.name">surname_10</stringProp>
                <stringProp name="Argument.value">Anderson</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="surname_11" elementType="Argument">
                <stringProp name="Argument.name">surname_11</stringProp>
                <stringProp name="Argument.value">Thomas</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="surname_12" elementType="Argument">
                <stringProp name="Argument.name">surname_12</stringProp>
                <stringProp name="Argument.value">Jackson</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="surname_13" elementType="Argument">
                <stringProp name="Argument.name">surname_13</stringProp>
                <stringProp name="Argument.value">White</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="surname_14" elementType="Argument">
                <stringProp name="Argument.name">surname_14</stringProp>
                <stringProp name="Argument.value">Harris</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="surname_15" elementType="Argument">
                <stringProp name="Argument.name">surname_15</stringProp>
                <stringProp name="Argument.value">Thompson</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="surname_16" elementType="Argument">
                <stringProp name="Argument.name">surname_16</stringProp>
                <stringProp name="Argument.value">Garcia</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="surname_17" elementType="Argument">
                <stringProp name="Argument.name">surname_17</stringProp>
                <stringProp name="Argument.value">Allen</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="surname_18" elementType="Argument">
                <stringProp name="Argument.name">surname_18</stringProp>
                <stringProp name="Argument.value">Young</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="surname_19" elementType="Argument">
                <stringProp name="Argument.name">surname_19</stringProp>
                <stringProp name="Argument.value">Hernandez</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="surname_20" elementType="Argument">
                <stringProp name="Argument.name">surname_20</stringProp>
                <stringProp name="Argument.value">King</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="surname_21" elementType="Argument">
                <stringProp name="Argument.name">surname_21</stringProp>
                <stringProp name="Argument.value">Wright</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="surname_22" elementType="Argument">
                <stringProp name="Argument.name">surname_22</stringProp>
                <stringProp name="Argument.value">Lopez</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="surname_23" elementType="Argument">
                <stringProp name="Argument.name">surname_23</stringProp>
                <stringProp name="Argument.value">Scott</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="surname_24" elementType="Argument">
                <stringProp name="Argument.name">surname_24</stringProp>
                <stringProp name="Argument.value">Green</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="surname_25" elementType="Argument">
                <stringProp name="Argument.name">surname_25</stringProp>
                <stringProp name="Argument.value">Adams</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="surname_26" elementType="Argument">
                <stringProp name="Argument.name">surname_26</stringProp>
                <stringProp name="Argument.value">Baker</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="surname_27" elementType="Argument">
                <stringProp name="Argument.name">surname_27</stringProp>
                <stringProp name="Argument.value">Perez</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="surname_28" elementType="Argument">
                <stringProp name="Argument.name">surname_28</stringProp>
                <stringProp name="Argument.value">Mitchell</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="surname_29" elementType="Argument">
                <stringProp name="Argument.name">surname_29</stringProp>
                <stringProp name="Argument.value">Kowalsky</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="surname_30" elementType="Argument">
                <stringProp name="Argument.name">surname_30</stringProp>
                <stringProp name="Argument.value">Novak</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="surname_31" elementType="Argument">
                <stringProp name="Argument.name">surname_31</stringProp>
                <stringProp name="Argument.value">Howard</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="surname_32" elementType="Argument">
                <stringProp name="Argument.name">surname_32</stringProp>
                <stringProp name="Argument.value">Cooper</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="surname_33" elementType="Argument">
                <stringProp name="Argument.name">surname_33</stringProp>
                <stringProp name="Argument.value">Torres</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="surname_34" elementType="Argument">
                <stringProp name="Argument.name">surname_34</stringProp>
                <stringProp name="Argument.value">Peterson</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="surname_35" elementType="Argument">
                <stringProp name="Argument.name">surname_35</stringProp>
                <stringProp name="Argument.value">Butler</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="surname_36" elementType="Argument">
                <stringProp name="Argument.name">surname_36</stringProp>
                <stringProp name="Argument.value">Powell</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="surname_37" elementType="Argument">
                <stringProp name="Argument.name">surname_37</stringProp>
                <stringProp name="Argument.value">Wood</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="surname_38" elementType="Argument">
                <stringProp name="Argument.name">surname_38</stringProp>
                <stringProp name="Argument.value">Hughes</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="surname_39" elementType="Argument">
                <stringProp name="Argument.name">surname_39</stringProp>
                <stringProp name="Argument.value">Foster</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="surname_40" elementType="Argument">
                <stringProp name="Argument.name">surname_40</stringProp>
                <stringProp name="Argument.value">Collins</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="surname_41" elementType="Argument">
                <stringProp name="Argument.name">surname_41</stringProp>
                <stringProp name="Argument.value">Parker</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="surname_42" elementType="Argument">
                <stringProp name="Argument.name">surname_42</stringProp>
                <stringProp name="Argument.value">Fisher</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="surname_43" elementType="Argument">
                <stringProp name="Argument.name">surname_43</stringProp>
                <stringProp name="Argument.value">Lawson</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="surname_44" elementType="Argument">
                <stringProp name="Argument.name">surname_44</stringProp>
                <stringProp name="Argument.value">Watts</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="surname_45" elementType="Argument">
                <stringProp name="Argument.name">surname_45</stringProp>
                <stringProp name="Argument.value">Morris</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="surname_46" elementType="Argument">
                <stringProp name="Argument.name">surname_46</stringProp>
                <stringProp name="Argument.value">Webb</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="surname_47" elementType="Argument">
                <stringProp name="Argument.name">surname_47</stringProp>
                <stringProp name="Argument.value">Murray</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="surname_48" elementType="Argument">
                <stringProp name="Argument.name">surname_48</stringProp>
                <stringProp name="Argument.value">Ferry</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="surname_49" elementType="Argument">
                <stringProp name="Argument.name">surname_49</stringProp>
                <stringProp name="Argument.value">Porter</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="surname_50" elementType="Argument">
                <stringProp name="Argument.name">surname_50</stringProp>
                <stringProp name="Argument.value">Santos</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="false">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">classId</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">Not Found</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
            <stringProp name="JSONPostProcessor.referenceNames">classId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">A</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="false">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">import org.apache.jmeter.config.Argument;
import org.apache.jmeter.config.Arguments;

Arguments argz = ctx.getCurrentSampler().getArguments();
for (int i = 0; i &lt; argz.getArgumentCount(); i++) {
    Argument arg = argz.getArgument(i);
    if (arg.getName().equals(&quot;classid&quot;)) {
        vars.put(&quot;classId&quot;, arg.getValue());
        break;
    }
}</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="false">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">classId = vars.get(&quot;${classId}&quot;);
f = new FileOutputStream(&quot;/Users/patrykjaruga/Desktop/classID.csv&quot;, true);
p = new PrintStream(f);
this.interpreter.setOut(p);
print(classId);
f.close();</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="filename">/Users/patrykjaruga/Desktop/add-rounds.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames">classId, classId2</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <stringProp name="delimiter">;</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
          </CSVDataSet>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="BASE_URL_1" elementType="Argument">
              <stringProp name="Argument.name">BASE_URL_1</stringProp>
              <stringProp name="Argument.value">mightifierapi-dev.eu-central-1.elasticbeanstalk.com</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="false">
          <stringProp name="filename">/Users/patrykjaruga/Desktop/TestPlans - dev/dev-teachers.csv</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="variableNames">userId, passcode, classId, st_passcode, st2_passcode</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <stringProp name="delimiter">;</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
        </CSVDataSet>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
